<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gyh.system.sys.dao.MenuDao">

    <resultMap id="menuUrlMap" type="com.gyh.system.sys.dto.MenuDto">
        <id column="id" property="id"/>
        <result column="parentId" property="parentId"/>
        <result column="name" property="name"/>
        <result column="grade" property="grade"/>
        <result column="sort" property="sort"/>
        <result column="href" property="href"/>
        <result column="target" property="target"/>
        <result column="icon" property="icon"/>
        <result column="show" property="show"/>
        <collection property="urls" ofType="com.gyh.system.sys.entity.MenuUrl">
            <id column="url_Id" property="id"/>
            <result column="url_menuId" property="menuId"/>
            <result column="url_name" property="name"/>
            <result column="url_url" property="url"/>
            <result column="url_type" property="type"/>
            <result column="auth" property="auth"/>
        </collection>
    </resultMap>

    <sql id="menuColumns">
        a.id AS "id",
        a.parent_id AS "parentId",
        a.parent_ids AS "parentId",
        a.name AS "name",
        a.grade AS "grade",
        a.sort AS "sort",
        a.href AS "href",
        a.target AS "target",
        a.icon AS "icon",
        a.is_show AS "show",
        a.create_by AS "createBy.id",
        a.create_date AS "createDate",
        a.update_by AS "updateBy.id",
        a.update_date AS "updateDate",
        a.remarks AS "remarks",
        a.is_del AS "del"
    </sql>


    <select id="get" resultType="Menu">
        SELECT
        <include refid="menuColumns"/>
        FROM sys_menu a
        WHERE a.id = #{id}
    </select>


    <select id="findList" resultType="Menu">
        SELECT
        <include refid="menuColumns"/>
        FROM sys_menu a
        WHERE a.is_del = #{del}
        <if test="parentId != null">AND a.parent_id = #{parentId}</if>
        <if test="name != null and name != ''">AND a.name = #{name}</if>
        ORDER BY a.sort
    </select>


    <select id="findAllList" resultType="Menu">
        SELECT
        <include refid="menuColumns"/>
        FROM sys_menu a
        WHERE a.is_del = #{del}
        ORDER BY a.id
    </select>

    <select id="getListByRoles" resultType="com.gyh.system.sys.dto.MenuDto">
        SELECT
        <include refid="menuColumns"/>
        FROM sys_menu a, sys_role_menu srm
        WHERE a.id = srm.menu_id AND a.is_del = ${DEL_NORMAL}
        <foreach collection="roles" index="i" open="AND srm.role_id IN (" separator="," close=")">
            #{roles[${i}]}
        </foreach>
        ORDER BY a.sort
    </select>

    <select id="getListUrlByRoles" resultMap="menuUrlMap">
        SELECT
            <include refid="menuColumns"/>,
            smu.id AS "url_id",
            smu.menu_id AS "url_menuId",
            smu.`name` AS "url_name",
            smu.url AS "url_url",
            smu.type AS "url_type",
            smu.is_auth AS "auth"
        FROM sys_menu a
        LEFT JOIN sys_role_menu srm ON a.id = srm.menu_id
        LEFT JOIN sys_menu_url smu ON a.id = smu.menu_id
        WHERE a.is_del = ${DEL_NORMAL}
        <foreach collection="roles" index="i" open="AND srm.role_id IN (" separator="," close=")">
            #{roles[${i}]}
        </foreach>
        ORDER BY a.sort
    </select>

    <insert id="inject" parameterType="Menu" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_menu (
        id,
        parent_id,
        parent_ids,
        name,
        grade,
        sort,
        href,
        target,
        icon,
        is_show,
        create_by,
        create_date,
        update_by,
        update_date,
        remarks,
        is_del
        ) VALUES (
        #{id},
        #{parentId},
        #{parentIds},
        #{name},
        #{grade},
        #{sort},
        #{href},
        #{target},
        #{icon},
        #{show},
        #{createBy.id},
        #{createDate},
        #{updateBy.id},
        #{updateDate},
        #{remarks},
        #{del}
        )
    </insert>

    <insert id="injectUserMenu" parameterType="Menu" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_role_menu (role_id,menu_id) VALUES (#{roleId},#{menuId})
    </insert>

    <update id="update" parameterType="Menu">
        UPDATE sys_menu
        <set>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="parentIds != null">parent_ids = #{parentIds},</if>
            <if test="name != null">name = #{name},</if>
            <if test="sort != null">sort = #{sort},</if>
            <if test="href != null">href = #{href},</if>
            <if test="target != null">target = #{target},</if>
            <if test="icon != null">icon = #{icon},</if>
            <if test="show != null">is_show = #{show},</if>
            <if test="updateBy != null">update_by = #{updateBy.id},</if>
            <if test="updateDate != null">update_date = #{updateDate},</if>
            <if test="remarks != null">remarks = #{remarks},</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="deleteById" parameterType="string">
        UPDATE sys_menu SET is_del = '1' WHERE id = #{id}
    </update>



</mapper>